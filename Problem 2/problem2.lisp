;; Each new term in the Fibonacci sequence is generated by adding the previous
;; two terms. By starting with 1 and 2, the first 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence whose values do not exceed
;; four million, find the sum of the even-valued terms.

;; This is an efficient approach to this problem. By observation, we notice that
;; every third number in the fibonacci sequence is even while the rest are odd.
;; Knowing this we can iterate only on the even numbers by the following recursive
;; method:
;; E(N) = 4 * E(N-1) + E(N-2)
;; where E(0) = 2 and E(1) = 8

(defun even-fib (n)
  (let ((e1 2)
        (e2 8)
        (temp 0)
        (sum 0))
    (loop (when (> e1 n) (return sum))
      (setf sum (+ sum e1))
      (setf temp e2)
      (setf e2 (+ (* 4 e2) e1))
      (setf e1 temp))))
